Notas_MarineParts.txt

Paquetes:
Se usa el requirements.txt para la referencia exhaustiva

- bootstrap3
- wkhtmltopdf -> https://github.com/incuna/django-wkhtmltopdf
- search engine
- ads
- REST framework -> https://github.com/encode/django-rest-framework
- bootstrap_admin -> https://github.com/django-admin-bootstrap/django-admin-bootstrap
- django-countries -> https://github.com/SmileyChris/django-countries
- python-quickbooks -> https://github.com/sidecars/python-quickbooks
- django-ads 0.1.8 -> https://pypi.python.org/pypi/django-ads/0.1.8
- safedelete -> https://github.com/makinacorpus/django-safedelete
- authorizenet -> https://github.com/AuthorizeNet/sdk-python

Se investiga, si se investiga: sustituir el User de Django en base a:
    - email como login.
    - Customers


Notas de implementación:

- Se debe populate la base de datos con 'pycountry'

Product class
Categories
Partner o fulfillment partners-> Distribuidores

Según boats.net:
    Hay dos categorias:
        - categorias
        - buscador de partes -> Tipo parte -> Año -> HP -> Sección de la parte

    Se muestra un mapa de todas las subpartes a elegir con sus costos asociados.

    Los productos son alcanzados por estas categorias.


Preguntas:

1) La aplicación web es centralizada para manejar todas las sucursales de los paises?

2) La base de datos debe ser centralizada, es decir, se debe almacenar todos los datos de los paises, sucursales, los usuarios, entre otras informaciones a almacenar.

3) Cada sucursal debe manejar su propia aplicación web?
